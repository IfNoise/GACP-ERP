#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–º–µ–Ω—ã –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ URS-XXX-001, FS-XXX-001 –≤ SOP —Ñ–∞–π–ª–∞—Ö
# –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ –≤ SOP —Ñ–∞–π–ª–∞—Ö..."

# –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —Å –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞–º–∏
FILES=(
  "/home/noise83/Projects/GACP-ERP/docs/sop/SOP_HVACMonitoring.md"
  "/home/noise83/Projects/GACP-ERP/docs/sop/SOP_Packaging.md"
  "/home/noise83/Projects/GACP-ERP/docs/sop/SOP_IrrigationFertilization.md"
  "/home/noise83/Projects/GACP-ERP/docs/sop/SOP_RawMaterialReception.md"
  "/home/noise83/Projects/GACP-ERP/docs/sop/SOP_InventoryManagement.md"
  "/home/noise83/Projects/GACP-ERP/docs/sop/SOP_CleaningSanitation.md"
  "/home/noise83/Projects/GACP-ERP/docs/sop/SOP_DryingCuring.md"
  "/home/noise83/Projects/GACP-ERP/docs/sop/SOP_Transplantation.md"
  "/home/noise83/Projects/GACP-ERP/docs/sop/SOP_Disinfection.md"
  "/home/noise83/Projects/GACP-ERP/docs/sop/SOP_Labeling.md"
  "/home/noise83/Projects/GACP-ERP/docs/sop/SOP_Storage.md"
)

# –°—Ç–∞—Ä—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –∑–∞–º–µ–Ω—ã
OLD_TEXT="- [URS-XXX-001, FS-XXX-001]
- [–ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã]"

# –ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç
NEW_TEXT="### Validation Documents

- [User Requirements Specification (URS)](../validation/URS.md)
- [Functional Specification (FS)](../validation/FS.md)
- [Design Specification (DS)](../validation/DS.md)
- [Traceability Matrix](../validation/TraceabilityMatrix.md)

### Regulatory Documents

- [WHO GACP](../compliance/WHO_GACP.md)
- [EU GMP Annex 11](../compliance/EU_GMP_Annex11.md)
- [ALCOA+ Principles](../compliance/ALCOA+.md)"

# –°—á–µ—Ç—á–∏–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
COUNT=0

for file in "${FILES[@]}"; do
  if [ -f "$file" ]; then
    echo "üìù –û–±—Ä–∞–±–æ—Ç–∫–∞: $(basename "$file")"
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    temp_file=$(mktemp)
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–º–µ–Ω—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º awk –¥–ª—è –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–π –∑–∞–º–µ–Ω—ã
    awk '
    BEGIN { 
      old1 = "- \\[URS-XXX-001, FS-XXX-001\\]"
      old2 = "- \\[–ù–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã\\]"
      replacement_done = 0
    }
    {
      if ($0 ~ old1 && !replacement_done) {
        # –ß–∏—Ç–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É
        getline next_line
        if (next_line ~ old2) {
          # –í—ã–≤–æ–¥–∏–º –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç
          print "### Validation Documents"
          print ""
          print "- [User Requirements Specification (URS)](../validation/URS.md)"
          print "- [Functional Specification (FS)](../validation/FS.md)"
          print "- [Design Specification (DS)](../validation/DS.md)"
          print "- [Traceability Matrix](../validation/TraceabilityMatrix.md)"
          print ""
          print "### Regulatory Documents"
          print ""
          print "- [WHO GACP](../compliance/WHO_GACP.md)"
          print "- [EU GMP Annex 11](../compliance/EU_GMP_Annex11.md)"
          print "- [ALCOA+ Principles](../compliance/ALCOA+.md)"
          replacement_done = 1
          next
        } else {
          print $0
          print next_line
        }
      } else {
        print $0
      }
    }
    ' "$file" > "$temp_file"
    
    # –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    mv "$temp_file" "$file"
    
    ((COUNT++))
    echo "  ‚úÖ –ì–æ—Ç–æ–≤–æ"
  else
    echo "  ‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $file"
  fi
done

echo ""
echo "‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: $COUNT"
echo "üéâ –ì–æ—Ç–æ–≤–æ!"
